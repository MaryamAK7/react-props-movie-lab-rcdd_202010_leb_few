{
  "stats": {
    "suites": 4,
    "tests": 14,
    "passes": 9,
    "pending": 0,
    "failures": 5,
    "start": "2021-01-21T19:03:54.872Z",
    "end": "2021-01-21T19:03:54.952Z",
    "duration": 80
  },
  "tests": [
    {
      "title": "renders at least one <MovieCard /> component",
      "fullTitle": "<MovieShowcase /> renders at least one <MovieCard /> component",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders 9 <MovieCard /> components",
      "fullTitle": "<MovieShowcase /> renders 9 <MovieCard /> components",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "passes all 4 props to every component",
      "fullTitle": "<MovieShowcase /> passes all 4 props to every component",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has generated the correct prop values for the first movie",
      "fullTitle": "<MovieShowcase /> has generated the correct prop values for the first movie",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has generated the correct prop values for the last movie",
      "fullTitle": "<MovieShowcase /> has generated the correct prop values for the last movie",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "assigns a default prop of 'Unknown' for the title prop",
      "fullTitle": "<MovieCard /> assigns a default prop of 'Unknown' for the title prop",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 'title' to equal 'unknown'",
        "showDiff": true,
        "actual": "title",
        "expected": "unknown",
        "stack": "AssertionError: expected 'title' to equal 'unknown'\n    at Context.<anonymous> (test/1-MovieCard.test.js:15:59)"
      }
    },
    {
      "title": "assigns a default prop of null for the IMDBRating prop",
      "fullTitle": "<MovieCard /> assigns a default prop of null for the IMDBRating prop",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "assigns a default prop of ['No Genre(s) Found'] for the genres prop",
      "fullTitle": "<MovieCard /> assigns a default prop of ['No Genre(s) Found'] for the genres prop",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected '[\"No Genres\"]' to equal '[\"No Genre(s) Found\"]'",
        "showDiff": true,
        "actual": "[\"No Genres\"]",
        "expected": "[\"No Genre(s) Found\"]",
        "stack": "AssertionError: expected '[\"No Genres\"]' to equal '[\"No Genre(s) Found\"]'\n    at Context.<anonymous> (test/1-MovieCard.test.js:23:62)"
      }
    },
    {
      "title": "assigns a default prop of 'default' for the poster prop",
      "fullTitle": "<MovieCard /> assigns a default prop of 'default' for the poster prop",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected 'noposter' to equal 'default'",
        "showDiff": true,
        "actual": "noposter",
        "expected": "default",
        "stack": "AssertionError: expected 'noposter' to equal 'default'\n    at Context.<anonymous> (test/1-MovieCard.test.js:27:60)"
      }
    },
    {
      "title": "uses the poster prop as a background image, rendering only the necessary HTML",
      "fullTitle": "<CardFront /> uses the poster prop as a background image, rendering only the necessary HTML",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "correctly renders the title prop",
      "fullTitle": "<CardBack /> correctly renders the title prop",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "correctly renders the genres prop as comma seperated strings",
      "fullTitle": "<CardBack /> correctly renders the genres prop as comma seperated strings",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 'Rolling in the DeepNever gonna give you up,Never gonna let you down,Never gonna run around and desert you' to include 'Never gonna give you up, Never gonna let you down, Never gonna run around and desert you'",
        "showDiff": false,
        "actual": "Rolling in the DeepNever gonna give you up,Never gonna let you down,Never gonna run around and desert you",
        "stack": "AssertionError: expected 'Rolling in the DeepNever gonna give you up,Never gonna let you down,Never gonna run around and desert you' to include 'Never gonna give you up, Never gonna let you down, Never gonna run around and desert you'\n    at Context.<anonymous> (test/3-CardBack.test.js:28:21)"
      }
    },
    {
      "title": "renders 'No Rating Found' in an <h4> if the IMDBRating prop is null",
      "fullTitle": "<CardBack /> renders 'No Rating Found' in an <h4> if the IMDBRating prop is null",
      "duration": 5,
      "currentRetry": 0,
      "err": {
        "message": "expected '\"no rating found\" ' to equal 'no rating found'",
        "showDiff": true,
        "actual": "\"no rating found\" ",
        "expected": "no rating found",
        "stack": "AssertionError: expected '\"no rating found\" ' to equal 'no rating found'\n    at Context.<anonymous> (test/3-CardBack.test.js:33:59)"
      }
    },
    {
      "title": "renders an <img> tag if the IMDBRating prop is valid",
      "fullTitle": "<CardBack /> renders an <img> tag if the IMDBRating prop is valid",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "assigns a default prop of 'Unknown' for the title prop",
      "fullTitle": "<MovieCard /> assigns a default prop of 'Unknown' for the title prop",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 'title' to equal 'unknown'",
        "showDiff": true,
        "actual": "title",
        "expected": "unknown",
        "stack": "AssertionError: expected 'title' to equal 'unknown'\n    at Context.<anonymous> (test/1-MovieCard.test.js:15:59)"
      }
    },
    {
      "title": "assigns a default prop of ['No Genre(s) Found'] for the genres prop",
      "fullTitle": "<MovieCard /> assigns a default prop of ['No Genre(s) Found'] for the genres prop",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected '[\"No Genres\"]' to equal '[\"No Genre(s) Found\"]'",
        "showDiff": true,
        "actual": "[\"No Genres\"]",
        "expected": "[\"No Genre(s) Found\"]",
        "stack": "AssertionError: expected '[\"No Genres\"]' to equal '[\"No Genre(s) Found\"]'\n    at Context.<anonymous> (test/1-MovieCard.test.js:23:62)"
      }
    },
    {
      "title": "assigns a default prop of 'default' for the poster prop",
      "fullTitle": "<MovieCard /> assigns a default prop of 'default' for the poster prop",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "expected 'noposter' to equal 'default'",
        "showDiff": true,
        "actual": "noposter",
        "expected": "default",
        "stack": "AssertionError: expected 'noposter' to equal 'default'\n    at Context.<anonymous> (test/1-MovieCard.test.js:27:60)"
      }
    },
    {
      "title": "correctly renders the genres prop as comma seperated strings",
      "fullTitle": "<CardBack /> correctly renders the genres prop as comma seperated strings",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected 'Rolling in the DeepNever gonna give you up,Never gonna let you down,Never gonna run around and desert you' to include 'Never gonna give you up, Never gonna let you down, Never gonna run around and desert you'",
        "showDiff": false,
        "actual": "Rolling in the DeepNever gonna give you up,Never gonna let you down,Never gonna run around and desert you",
        "stack": "AssertionError: expected 'Rolling in the DeepNever gonna give you up,Never gonna let you down,Never gonna run around and desert you' to include 'Never gonna give you up, Never gonna let you down, Never gonna run around and desert you'\n    at Context.<anonymous> (test/3-CardBack.test.js:28:21)"
      }
    },
    {
      "title": "renders 'No Rating Found' in an <h4> if the IMDBRating prop is null",
      "fullTitle": "<CardBack /> renders 'No Rating Found' in an <h4> if the IMDBRating prop is null",
      "duration": 5,
      "currentRetry": 0,
      "err": {
        "message": "expected '\"no rating found\" ' to equal 'no rating found'",
        "showDiff": true,
        "actual": "\"no rating found\" ",
        "expected": "no rating found",
        "stack": "AssertionError: expected '\"no rating found\" ' to equal 'no rating found'\n    at Context.<anonymous> (test/3-CardBack.test.js:33:59)"
      }
    }
  ],
  "passes": [
    {
      "title": "renders at least one <MovieCard /> component",
      "fullTitle": "<MovieShowcase /> renders at least one <MovieCard /> component",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders 9 <MovieCard /> components",
      "fullTitle": "<MovieShowcase /> renders 9 <MovieCard /> components",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "passes all 4 props to every component",
      "fullTitle": "<MovieShowcase /> passes all 4 props to every component",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has generated the correct prop values for the first movie",
      "fullTitle": "<MovieShowcase /> has generated the correct prop values for the first movie",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has generated the correct prop values for the last movie",
      "fullTitle": "<MovieShowcase /> has generated the correct prop values for the last movie",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "assigns a default prop of null for the IMDBRating prop",
      "fullTitle": "<MovieCard /> assigns a default prop of null for the IMDBRating prop",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "uses the poster prop as a background image, rendering only the necessary HTML",
      "fullTitle": "<CardFront /> uses the poster prop as a background image, rendering only the necessary HTML",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "correctly renders the title prop",
      "fullTitle": "<CardBack /> correctly renders the title prop",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "renders an <img> tag if the IMDBRating prop is valid",
      "fullTitle": "<CardBack /> renders an <img> tag if the IMDBRating prop is valid",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    }
  ]
}